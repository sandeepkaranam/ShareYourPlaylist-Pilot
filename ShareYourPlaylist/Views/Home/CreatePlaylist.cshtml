@model ShareYourPlaylist.Models.CreatePlaylistViewModel

@{
    ViewData["Title"] = "Create a New Playlist";
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

<h2>Create a New Playlist</h2>

    <!-- Display List of Added Spotify URIs -->
    <h2>Added Songs</h2>
    <ul class="list-group mb-4">
        @foreach (var uri in Model.SongUris)
        {
            <li class="list-group-item">
                <strong>Spotify URI:</strong> @uri
            </li>
        }
    </ul>

    <hr />

    <!-- Form to finalize and create the playlist -->
    <h2>Playlist Details</h2>
    <form asp-action="CreatePlaylist" method="post" enctype="multipart/form-data">
        <div class="form-group">
        <label asp-for="Name">Playlist Name</label>
        <input asp-for="Name" class="form-control" placeholder="Enter playlist name" />
        <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="form-group">
        <label asp-for="ImageFile">Playlist Image (optional)</label>
        <input asp-for="ImageFile" type="file" class="form-control-file" />
        <span asp-validation-for="ImageFile" class="text-danger"></span>
        </div>

    <button type="submit" class="btn btn-primary">Create Playlist</button>
</form>

<a asp-action="Playlists" class="btn btn-secondary">Back to Playlists</a>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
        }

        <button type="submit" class="btn btn-success mt-3">Create Playlist</button>
    </form>
</div>
